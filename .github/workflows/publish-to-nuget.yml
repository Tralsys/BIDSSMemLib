name: Publish to nuget
run-name: Publish `${{ inputs.project }}` to nuget from `${{ github.ref_name }}`

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'project name to publish'
        required: true
        type: choice
        options:
          - BIDSSMemLib.CtrlInput
          - BIDSSMemLib.rw
          - BIDSSMemLib.structs
          - TR.CustomDataSharingManager.Core
          - TR.ISMemCtrler
          - TR.SMemCtrler
          - TR.SMemCtrler.AutoReadSupporter
          - TR.ISMemIF
          - TR.SMemIF
          - TR.SMemIF.Mock

jobs:
  build:
    runs-on: windows-latest
    outputs:
      ASSEMBLY_NAME: ${{ steps.get-project-info.outputs.ASSEMBLY_NAME }}
      VERSION: ${{ steps.get-project-info.outputs.VERSION }}

    steps:
    - uses: actions/checkout@v3

    - name: Get Project Info
      id: get-project-info
      shell: pwsh
      run: ./.github/workflows/get-version.ps1 -ProjectName ${{ inputs.project }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Install dependencies
      run: dotnet restore ${{ inputs.project }}

    - name: Build
      run: dotnet build ${{ inputs.project }} -c Release --no-restore

    - name: Pack
      run: dotnet pack ${{ inputs.project }} -c Release --no-build -o dst

    - name: Upload nupkg to Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.get-project-info.outputs.ASSEMBLY_NAME }}.${{ steps.get-project-info.outputs.VERSION }}.nupkg
        path: dst/${{ steps.get-project-info.outputs.ASSEMBLY_NAME }}.${{ steps.get-project-info.outputs.VERSION }}.nupkg

  publish-to-nuget:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
    - name: Download nupkg from Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ needs.build.outputs.ASSEMBLY_NAME }}.${{ needs.build.outputs.VERSION }}.nupkg


    - name: publish to nuget.org
      run: >
        dotnet nuget push
        ${{ needs.build.outputs.ASSEMBLY_NAME }}.${{ needs.build.outputs.VERSION }}.nupkg
        --source https://api.nuget.org/v3/index.json
        --api-key ${{ secrets.NUGET_API_KEY }}

    - name: show version to summary
      run: |
        echo "### Publish Success :rocket:" >> $env:GITHUB_STEP_SUMMARY
        echo "The project \`${{ inputs.project }}\` (version: \`${{ needs.build.outputs.VERSION }}\`) was successfully published to nuget.org" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "see: https://www.nuget.org/packages/${{ needs.build.outputs.ASSEMBLY_NAME }}/${{ needs.build.outputs.VERSION }}" >> $env:GITHUB_STEP_SUMMARY
